/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1==NULL && l2==NULL) return NULL;
        ListNode* temp = new ListNode(0);
        ListNode* p = l1, *q = l2, *curr = temp;
        int carry=0;
        while(p!=NULL || q!=NULL){
            int val1 = (p==NULL)?0: p->val;
            int val2 = (q==NULL)?0: q->val;
            int sum= val1 + val2 + carry;
            carry = sum/10;
            curr->next = new ListNode(sum%10);
            curr = curr->next; 
            if(p!=NULL) p=p->next;
            if(q!=NULL) q=q->next;
        }
        if(carry>0){
            curr->next = new ListNode(carry);
        }
        return temp->next;
    }
};
