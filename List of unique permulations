class Solution {
  public:
    void nextPermutation(vector<int>& arr){
        int n = arr.size();
        int idx =-1;
        
        for(int i=n-2; i>=0; i--){
            if(arr[i+1]>arr[i]){
                idx = i;
                break;
            }
        }
        if(idx==-1){
            reverse(arr.begin(), arr.end());
            return;
        }
        
        for(int i=n-1; i>=0; i--){
            if(arr[i]>arr[idx]){
                 swap(arr[idx], arr[i]);
                 break;
            }
           
        }
        reverse(arr.begin()+idx+1, arr.end());
    }
    vector<vector<int>> uniquePerms(vector<int> &arr ,int n) {
        // code here
        sort(arr.begin(), arr.end());
        set<vector<int>> uniqueSet;
        vector<vector<int>> result;
        do {
            if (uniqueSet.insert(arr).second) { // it result evaluates true
                result.push_back(arr);
            }
            nextPermutation(arr);
        } while (arr != result[0]);  //cycle
        
        return result;
    }
};
