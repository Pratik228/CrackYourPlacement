class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.empty() || matrix[0].empty()) return 0;
        int n= matrix.size();
        int m=matrix[0].size();

        vector<int> heights(m+1, 0);
        int maxArea=0;
        for(int i=0; i<n; i++){
            for(int k=0; k<m; k++){
                if(matrix[i][k]=='1') heights[k] = heights[k]+1;
                else heights[k]=0;
            }

            stack<int> st;
            for(int j=0; j<heights.size(); j++){
                while(!st.empty() && heights[st.top()]> heights[j]){
                    int height = heights[st.top()];
                    st.pop();
                    int width;
                    if(st.empty()){
                        width = j;
                    }else{
                        width = j-st.top()-1;
                    }
                    maxArea = max(maxArea, width*height);
                }
                st.push(j);
            }
        }

        return maxArea;
    }
};
