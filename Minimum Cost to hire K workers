class Solution {
public:
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int k) {
        int n = quality.size();
        vector<pair<double, int>> workers;

        for(int i=0; i<n; i++){
            workers.push_back({(double)wage[i]/quality[i], quality[i]});
        }
        sort(workers.begin(), workers.end());

        priority_queue<int> pq;
        int qualityWork=0;
        double mincost =DBL_MAX;
        for(auto[ratio, qual] : workers){
            qualityWork+=qual;
            pq.push(qual);

            if(pq.size()>k){
                qualityWork-=pq.top();
                pq.pop();
            }
            if(pq.size()==k){
                mincost = min(mincost, qualityWork*ratio);
            }
        }
        return mincost;
    }
};
