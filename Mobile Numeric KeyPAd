long long getCount(int n) {
        // Your code goes here
        vector<vector<int>> possibleMoves = {
            {0, 8},          // 0
            {1, 2, 4},       // 1
            {1, 2, 3, 5},    // 2
            {2, 3, 6},       // 3
            {1, 4, 5, 7},    // 4
            {2, 4, 5, 6, 8}, // 5
            {3, 5, 6, 9},    // 6
            {4, 7, 8},       // 7
            {5, 7, 8, 9, 0}, // 8
            {6, 8, 9}        // 9
        };
        
        vector<vector<long long>> dp(n, vector<long long>(10, 0));
        for(int j = 0; j < 10; j++) {
            dp[0][j] = 1;
        }
        
        for(int i = 1; i < n; i++) {
            for(int j = 0; j < 10; j++) {
                for(int next : possibleMoves[j]) {
                    dp[i][j] = (dp[i][j] + dp[i-1][next]);
                }
            }
        }
        
        long long result = 0;
        for(int j = 0; j < 10; j++) {
            result = (result + dp[n-1][j]);
        }
        
        return result;
    }
