class Solution {
public:
    bool isPalindrome(string s, int i, int j){
        while(i<j){
            if(s[i]!=s[j]) return false;
            i++;
            j--;
        }
        return true;
    }
    void canPartition(int idx, string s, vector<vector<string>> &ans, vector<string> 
    &partition){
        if(idx==s.size()){
            ans.push_back(partition);
            return;
        }
        for(int i=idx; i<s.size(); i++){
            if(isPalindrome(s, idx, i)){
                partition.push_back(s.substr(idx, i-idx+1));
                canPartition(i+1, s, ans, partition);
                partition.pop_back();
            }
        }

    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> partition;
        canPartition(0, s, ans, partition);
        return ans;
    }
};

