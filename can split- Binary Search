class Solution {
public:
    bool canSplit(vector<int>& nums, int k, int sum){
        int cnt=1, splitS=0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i]+splitS>sum){
                splitS = nums[i];
                cnt++;
            }
            else if(nums[i]>sum) return false;
            else{
                splitS +=nums[i];
            }
        }
        if(cnt>k) return false;
        else return true;
    }
    int splitArray(vector<int>& nums, int k) {
        int low = *max_element(nums.begin(), nums.end());
        int high = accumulate(nums.begin(), nums.end(), 0);

        while(low<=high){
            int mid = ((low+high)>>1);
            if(canSplit(nums, k, mid)){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return high+1;
    }
};
