/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
       // step 1---> connect in between
        Node* temp=head;
        while(temp!=NULL){
            Node* copy= new Node(temp->val);
            copy->next= temp->next;
            temp->next =copy;
            temp= temp->next->next;
        }
        // step2---> connect the random pointers
        temp=head;
        while(temp!=NULL){
            Node* copy = temp->next;
            if(temp->random!=NULL) copy->random = temp->random->next; //to the copy node
            else copy->random = NULL;
            temp = temp->next->next;
        }

        //step 3---> connecting the next Pointers
        temp=head;
        Node* dummyNode = new Node(-1);
        Node* res = dummyNode;

        while(temp!=NULL){
            res->next = temp->next;
            res = res->next;
            temp->next = temp->next->next;
            temp = temp->next;
        }
        return dummyNode->next;
    }
};
