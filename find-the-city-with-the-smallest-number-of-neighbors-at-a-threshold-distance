https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/

class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> dist(n, vector<int>(n, INT_MAX));
        for(auto it: edges){
            dist[it[0]][it[1]] = it[2];
            dist[it[1]][it[0]] = it[2];
        }
	    for(int i=0; i<n; i++) dist[i][i]=0;
	    for(int via = 0; via<n; via++){
	        for(int i=0; i<n; i++){
	            for(int j=0; j<n; j++){
                    if(dist[i][via]==INT_MAX ||  dist[via][j]==INT_MAX) continue;
	                if(dist[i][j] > dist[i][via] + dist[via][j] ){
	                    dist[i][j] = dist[i][via] + dist[via][j];
	                }
	            }
	        }
	    }
        int maxthresh = distanceThreshold+1;
        int count = 0;
        int cityans =-1;
        for(int city=0; city<n; city++){
            count=0;
            for(int j=0; j<n; j++){
                if(dist[city][j]<=distanceThreshold){
                    count++;
                }
            }
            if(count<=maxthresh){
                maxthresh = count;
                cityans = city;
            }
            
        }
        return cityans;
    }
};
