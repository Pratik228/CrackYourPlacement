https://leetcode.com/problems/path-sum-iii/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int calSum(TreeNode* root, int targetSum, long sum, unordered_map<long, long> &prefixSum){
        if(root==NULL) return 0;
        sum+=root->val;
        int currSum = prefixSum[sum-targetSum];
        prefixSum[sum]++;
        int totalPath = calSum(root->left, targetSum, sum, prefixSum) + calSum(root->right, targetSum, sum, prefixSum) + currSum;
        prefixSum[sum]--;
        return totalPath;
    }
    int pathSum(TreeNode* root, int targetSum) {
        unordered_map<long, long> prefixSum;
        prefixSum[0]=1;
        return calSum(root, targetSum, 0, prefixSum);
    }
};
