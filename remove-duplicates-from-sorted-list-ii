/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if (!head || !head->next) return head;
        ListNode* dummyNode = new ListNode(0);
        dummyNode->next = head;
        ListNode* curr=head;
        ListNode* prev=dummyNode;
        while(curr!=NULL){
            bool isDup=false;
            while(curr->next!=NULL && curr->val==curr->next->val){
                curr=curr->next;
                isDup=true;
            }
            if(isDup){
                prev->next = curr->next;
            }
            else{
                prev = prev->next;
            }
            curr = curr->next;
          
        }
        ListNode* newHead = dummyNode->next;
        delete dummyNode;
        return newHead;
    }
};
