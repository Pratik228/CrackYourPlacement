 https://www.geeksforgeeks.org/problems/rotten-oranges2536/1

int orangesRotting(vector<vector<int>>& grid) {
        // Code here
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> vis(n, vector<int>(m, -1));
        int freshoranges=0;
        queue<pair<pair<int, int>, int>> q;
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid[i][j]==2){
                    q.push({{i, j}, 0});
                    vis[i][j]=1;
                } else if(grid[i][j]==1){
                    freshoranges++;
                }
            }
        }
        vector<int> delrow = {0, -1, 0, 1};
        vector<int> delcol = {-1, 0, 1, 0};
        int time =0;
       
        while(!q.empty()){
            int row = q.front().first.first;
            int col = q.front().first.second;
            time = q.front().second;
            q.pop();
            for(int i=0; i<4; i++){
                int nrow = row + delrow[i];
                int ncol = col + delcol[i];
                
                if(nrow<n && nrow>=0 && ncol<m && ncol>=0 && vis[nrow][ncol]==-1
                && grid[nrow][ncol]==1){
                    vis[nrow][ncol]=1;
                    freshoranges--;
                    q.push({{nrow, ncol},time+1});
                }
            }
        }
        if(freshoranges==0) return time;
        else return -1;
    }
