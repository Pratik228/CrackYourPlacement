class Solution {
public:
    vector<int> findNse(vector<int>& arr){
        stack<int> st;
        int n=arr.size();
        vector<int> nse(n);
        for(int i=n-1; i>=0; i--){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                st.pop();
            }
            nse[i] = st.empty()?n:st.top();
            st.push(i);
        }
        return nse;
    }
    vector<int> findPsseList(vector<int>& arr){
        stack<int> st;
        int n=arr.size();
        vector<int> nse(n);
        for(int i=0; i<n; i++){
            while(!st.empty() && arr[st.top()]>arr[i]){
                st.pop();
            }
            nse[i] = st.empty()?-1:st.top();
            st.push(i);
        }
        return nse;
    }
    int sumSubarrayMins(vector<int>& arr) {
        int mod = 1e9+7;
        vector<int> nseList = findNse(arr);
        vector<int> psseList = findPsseList(arr);
        int sum=0;
        for(int i=0; i<arr.size(); i++){
            int left = i-psseList[i];
            int right = nseList[i]-i;
            sum = (sum + ((long long)left * right % mod * arr[i] % mod)) % mod;
        }
        return (int)sum;
    }
};
