https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/submissions/1324220771/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, map<int, multiset<int>>> mpp;
        queue<pair<TreeNode*, pair<int,int>>> q;
        q.push({root, {0, 0}});
        while(!q.empty()){
            TreeNode* node = q.front().first;
            int y = q.front().second.first;
            int x = q.front().second.second;
            q.pop();
            mpp[x][y].insert(node->val);
            if(node->left) q.push({node->left, {y+1, x-1}});
            if(node->right) q.push({node->right, {y+1, x+1}});
        }
        vector<vector<int>> ans;
        for(auto p: mpp){
            vector<int> cols;
            for(auto q: p.second){
                cols.insert(cols.end(), q.second.begin(), q.second.end());
            }
            ans.push_back(cols);
        }
        return ans;

    }
};
